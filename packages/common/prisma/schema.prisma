// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

enum RideStatus {
  REQUESTED
  ACCEPTED
  STARTED
  COMPLETED
  CANCELLED
}

// generic user model that extends to both types
model User {
  id        String   @id @default(cuid())
  name      String?
  number    String   @unique 
  password  String          
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt    
  driver    Driver?
  rider     Rider?
}

model Driver {
  id        String    @id @default(cuid())
  userId    String    @unique
  user      User      @relation(fields: [userId], references: [id])
  isActive  Boolean   @default(false)
  location  Unsupported("Point")?
  trips     Trip[]
}

model Rider {
  id        String    @id @default(cuid())
  userId    String    @unique
  user      User      @relation(fields: [userId], references: [id])
  trips     Trip[]
}

model Trip {
  id              String      @id @default(cuid())
  riderId         String
  rider           Rider       @relation(fields: [riderId], references: [id])
  driverId        String?
  driver          Driver?     @relation(fields: [driverId], references: [id])
  status          RideStatus  @default(REQUESTED)    
  pickupLocation  Unsupported("Point")
  dropoffLocation Unsupported("Point")
  createdAt       DateTime    @default(now())
  completedAt     DateTime?
}